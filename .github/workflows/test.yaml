name: ci
on:
  push:
    branches: ["main"]
  pull_request:

env:
  AIRFLOW_VERSION: 3.0.6

jobs:

  lint:
    name: Lint and type checks
    runs-on: ubuntu-latest
    steps:
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Cloning target repository
        uses: actions/checkout@v4

      - name: Run checks
        run: |
          uv run tox run -e lint
          uv run tox run -e type

  unit_test:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      # Target repo is to be checked out first (order matters!)
      - name: Cloning target repository
        uses: actions/checkout@v4

      # Airflow's python plugin is not portable, thus we use it from the source
      - name: Clone Airflow sources, to enable Airflow pytset plugin
        uses: actions/checkout@v4
        with:
          repository: apache/airflow
          path: airflow
          ref: ${{ env.AIRFLOW_VERSION }}

      - name: Adjust Airflow version for local env
        run: |
          sed -e "s/<AIRFLOW_VERSION>/$AIRFLOW_VERSION/" pyproject.toml.template > pyproject.toml
          echo "Airflow Version is $AIRFLOW_VERSION"
        env:
          AIRFLOW_VERSION: ${{ env.AIRFLOW_VERSION}}

      - name: Run tests
        run: |
          export AIRFLOW_SOURCES=$PWD/airflow
          uv run tox run -e unit_test

  system_tests:
    name: System tests on local Nomad instance
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup `nomad`
        uses: hashicorp/setup-nomad@main
        id: setup
        with:
          version: ${{ env.PRODUCT_VERSION }}

      - name: Run `nomad version`
        id: version
        run: "nomad version"

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      # Target repo is to be checked out first (order matters!)
      - name: Cloning target repository
        uses: actions/checkout@v4

      # Airflow's python plugin is not portable, thus we use it from the source
      - name: Clone Airflow sources, to enable Airflow pytset plugin
        uses: actions/checkout@v4
        with:
          repository: apache/airflow
          path: airflow
          ref: ${{ env.AIRFLOW_VERSION }}

      - name: Adjust Airflow version for local env
        run: |
          sed -e "s/<AIRFLOW_VERSION>/$AIRFLOW_VERSION/" pyproject.toml.template > pyproject.toml
          echo "Airflow Version is $AIRFLOW_VERSION"
        env:
          AIRFLOW_VERSION: ${{ env.AIRFLOW_VERSION}}

      - name: Run tests
        id: systest
        run: |
          export AIRFLOW_SOURCES=$PWD/airflow
          export AIRFLOW_HOME=$PWD/tests/system/nomad/server/airflow_home

          export _AIRFLOW__SYSTEM_TEST_USE_EXECUTOR=1

          ./tests/system/nomad/scripts/init_airflow_cfg.sh

          uv run airflow db reset -y
          uv run airflow api-server &
          timeout 200 uv run tox run -e system_test

      - name: Save nomad logs
        if: failure()
        run: |
          mkdir nomad_logs
          sudo cp -r /tmp/Nomad* nomad_logs
          sudo tar -czvf nomad_logs.tar.gz nomad_logs
          sudo chmod 777 nomad_logs.tar.gz
          mv nomad_logs.tar.gz tests/system/nomad/server/logs

      - name: Collect logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: nomad_provider_test_output
          path: |
            tests/system/nomad/server/logs/*
